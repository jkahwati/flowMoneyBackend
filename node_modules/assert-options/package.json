{
  "_args": [
    [
      {
        "raw": "assert-options@0.1.3",
        "scope": null,
        "escapedName": "assert-options",
        "name": "assert-options",
        "rawSpec": "0.1.3",
        "spec": "0.1.3",
        "type": "version"
      },
      "/home/jeka/node-workspace/flowMoneyBackend/node_modules/pg-promise"
    ]
  ],
  "_from": "assert-options@0.1.3",
  "_hasShrinkwrap": false,
  "_id": "assert-options@0.1.3",
  "_location": "/assert-options",
  "_nodeVersion": "10.14.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/assert-options_0.1.3_1551546594628_0.8969859455498277"
  },
  "_npmUser": {
    "name": "vitaly.tomilov",
    "email": "vitaly.tomilov@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "assert-options@0.1.3",
    "scope": null,
    "escapedName": "assert-options",
    "name": "assert-options",
    "rawSpec": "0.1.3",
    "spec": "0.1.3",
    "type": "version"
  },
  "_requiredBy": [
    "/pg-promise"
  ],
  "_resolved": "https://registry.npmjs.org/assert-options/-/assert-options-0.1.3.tgz",
  "_shasum": "ea56c6a67a558eefb9db52c394f2fa92b94bfcde",
  "_shrinkwrap": null,
  "_spec": "assert-options@0.1.3",
  "_where": "/home/jeka/node-workspace/flowMoneyBackend/node_modules/pg-promise",
  "author": {
    "name": "Vitaly Tomilov",
    "email": "vitaly.tomilov@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/vitaly-t/assert-options/issues",
    "email": "vitaly.tomilov@gmail.com"
  },
  "dependencies": {},
  "description": "Generic options parameter handling",
  "devDependencies": {
    "coveralls": "3.0.3",
    "eslint": "5.15.0",
    "istanbul": "0.4.5",
    "jasmine-node": "1.16.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-DXrZ5WkCv/igD+H8OmeUTl9k0pBhYSTdyA7DRZoSJERCzQ8Z2v85yDjkhYVnHUOeCXGfCNKaogRbLWQsIQbtpg==",
    "shasum": "ea56c6a67a558eefb9db52c394f2fa92b94bfcde",
    "tarball": "https://registry.npmjs.org/assert-options/-/assert-options-0.1.3.tgz",
    "fileCount": 3,
    "unpackedSize": 5056,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcerjjCRA9TVsSAnZWagAAFt4QAI1OdUwrwWZ3/YqrYNqT\nzEKdRyEODlFrKVU0DRg8P2aJFz+q/QdEUP7k7RLgfU9wszncSePsmIqf3/HA\noV8lBkVlK5006WJKQjPn0J78A3s9a8nHUunT3w+WsmkTAuA2nq3z71uJbU36\n+4fV8nbPvjqZtzWfBz5sMBydf0tcse8Kw+uN482irHJOxBsXzFmF66Sac0Qc\nDh9IK7PyWSp1R/Faddhj1J1q18voBrbAfC/TiLKn3pYlL3nTO3igRnLWpOKI\njngKKNV4KXqqg7fv0HmTPsjLJaK7xxlNl6QEFtxmROX+XHZPVGOniuOyLwee\n9fVUQLn6ipJjzLQmrTGCpO0krFGzRdfJ3z2lXlauGYcPBY00+Fz4oLP/gERF\ntqBvikMnAPG6ZcQjVzk7REuWUsj4KRZ1of7KxSeOWTtcJPU2qFMIlucgBUkQ\n23v1laNTZwxBV8bUWHZVwwAq4WnV8yV+x+s3MrFuWAF7lS1xRIk9Cwc/+kEw\nbL2hlZ8MtMW6oxDBi7+GSCB8UXdXFFwCOKfY05ePXyWw0Q61P82cYetm7UeN\nc8PermlnTD8D7hoFzory8WSqIVTjRW1GJcIvzzmrxa1Xnf6BXt+MJ7e0Njuz\nC1GPP/r7NilHMyvCihqeclYZDrWSQoGss5toiMgzcG58jo6Z5mEqIWtyE5ih\n8ME1\r\n=l1/O\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4.0",
    "npm": ">=2.15"
  },
  "files": [
    "src"
  ],
  "gitHead": "233fced9657524ab06018c24958781a1688196b2",
  "homepage": "https://github.com/vitaly-t/assert-options",
  "keywords": [
    "assert",
    "options"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "vitaly.tomilov",
      "email": "vitaly.tomilov@gmail.com"
    }
  ],
  "name": "assert-options",
  "optionalDependencies": {},
  "readme": "# assert-options\r\n\r\nSmart `options` handling, with one line of code:\r\n\r\n* throw detailed error on invalid options\r\n* set default values for missing options  \r\n\r\n[![Build Status](https://travis-ci.org/vitaly-t/assert-options.svg?branch=master)](https://travis-ci.org/vitaly-t/assert-options)\r\n[![Coverage Status](https://coveralls.io/repos/vitaly-t/assert-options/badge.svg?branch=master)](https://coveralls.io/r/vitaly-t/assert-options?branch=master)\r\n\r\n## Rationale\r\n\r\n* Passing in invalid or misspelled option names is one of the most common errors.\r\n* Assigning defaults is the most common operation for methods that take options.  \r\n\r\nThis module automates proper options parsing and setting defaults where needed.\r\n\r\n## Installation\r\n\r\n```\r\n$ npm install assert-options\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nconst assertOptions = require('assert-options');\r\n\r\nfunction functionWithOptions(options) {\r\n    options = assertOptions(options, {first: 123, second: null});\r\n    \r\n    // options is a safe object here, with all missing defaults set.\r\n}\r\n```\r\n\r\nAnd when default values are not needed, you can use an array of strings:\r\n\r\n```js\r\nfunction functionWithOptions(options) {\r\n    options = assertOptions(options, ['first', 'second']);\r\n    \r\n    // the result is exactly the same as using the following:\r\n    // options = assertOptions(options, {first: undefined, second: undefined});\r\n    \r\n    // options is a safe object here, without defaults.\r\n}\r\n```\r\n\r\nIncluding `src/index.js` in a browser makes function `assertOptions` available globally.\r\n\r\n## API\r\n\r\n### `assertOptions(options, defaults) => {}` \r\n\r\n* When `options` is `null`/`undefined`, new `{}` is returned, applying `defaults` as specified.\r\n\r\n* When `options` contains an unknown property, [Error] `Option \"name\" is not supported.` is thrown.\r\n\r\n* When a property in `options` is missing or `undefined`, its value is set from the `defaults`,\r\nprovided it is available and not `undefined`.\r\n\r\n* When `options` is not `null`/`undefined`, it must be of type `object`, or else [TypeError] is thrown:\r\n`Invalid \"options\" parameter: value`.\r\n\r\n* Parameter `defaults` is required, as a non-`null` object or an array of strings, or else [TypeError]\r\nis thrown: `Invalid \"defaults\" parameter: value`.\r\n\r\n[Error]:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\r\n[TypeError]:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vitaly-t/assert-options.git"
  },
  "scripts": {
    "coverage": "istanbul cover ./node_modules/jasmine-node/bin/jasmine-node test",
    "lint": "eslint ./test/ ./src/*.js",
    "test": "jasmine-node test",
    "travis": "npm run lint && istanbul cover ./node_modules/jasmine-node/bin/jasmine-node test --captureExceptions && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage"
  },
  "version": "0.1.3"
}
